<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ikea.warehouseapp.data.mybatis.ProductReadMapper">
    <sql id="selectProduct">
        select
        P.id productId,
        P.name productName,
        P.price productPrice
    </sql>
    <sql id="tableJoinCondition">
        from product P
        left join product_articles PA on P.id = PA.product_id
        left join article A on A.article_id = PA.article_id
    </sql>
    <sql id="groupByProduct">
        group by P.id, P.name
    </sql>
    <sql id="findProductsWithQuantity">
        <include refid="selectProduct"/>
        , min(A.stock / PA.amount_of) quantity
        <include refid="tableJoinCondition"/>
        <include refid="groupByProduct"/>
    </sql>
    <select id="selectNextProductIdSeq" resultType="java.lang.Long">
        select nextval ('product_id_seq')
    </select>
    <select id="findProductsByNameIn" resultType="java.lang.String">
        select P.name
        from product P
        where P.name in
        <foreach collection="productNames" item="name" open="(" separator="," close=")">
            #{name}
        </foreach>
    </select>
    <select id="findAvailableProducts" resultMap="availableProduct">
        select *
        from (<include refid="findProductsWithQuantity"/>) PQ
        where PQ.quantity > 0
        offset #{page.offset}
        limit #{page.limit}
    </select>
    <select id="countAvailableProducts" resultType="java.lang.Long">
        select count(distinct PQ.productId)
        from (<include refid="findProductsWithQuantity"/>) PQ
        where PQ.quantity > 0
    </select>
    <select id="findProductAvailableStock" resultMap="availableProduct">
        <include refid="selectProduct"/>
        , min(A.stock / PA.amount_of) quantity
        <include refid="tableJoinCondition"/>
        where P.id = #{id}
        <include refid="groupByProduct"/>
    </select>
    <resultMap id="availableProduct" type="com.ikea.warehouseapp.data.dto.AvailableProductDto">
        <!--<id column="productId" property="id"/>-->
        <result column="productName" property="name"/>
        <result column="productPrice" property="price"/>
        <result column="quantity" property="quantity"/>
    </resultMap>
</mapper>